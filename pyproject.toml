[project]
name = "assistant"
version = "0.1.0"
description = "A Python assistant project"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    {name = "Eric Feng", email = "fengyj@live.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "anthropic>=0.64.0", # Anthropic Claude AI API client
    "bcrypt>=4.0.0", # Password hashing algorithm
    "cryptography>=45.0.5", # Cryptography and security functions
    "fastapi>=0.116.0", # Modern web framework
    "google-generativeai>=0.8.5", # Google Gemini AI API client
    "holidays>=0.80", # Holiday date calculations
    "httpx>=0.28.1", # Async HTTP client
    "langchain>=0.3.27", # LLM application development framework
    "langchain-anthropic>=0.3.19", # LangChain Anthropic integration
    "langchain-community>=0.3.27", # LangChain community tools integration
    "langchain-google-genai>=2.0.10", # LangChain Google Gemini integration
    "langchain-ollama>=0.3.6", # LangChain Ollama integration
    "langchain-openai>=0.3.30", # LangChain OpenAI integration
    "langgraph>=0.6.5", # LangChain workflow orchestration
    "langmem>=0.0.29", # LangChain memory management
    "langsmith>=0.4.14", # LangChain monitoring and debugging
    "lxml>=6.0.1", # XML/HTML parsing
    "markdown>=3.8.2", # Markdown processing
    "ollama>=0.5.3", # Local LLM service client
    "openai>=1.99.9", # OpenAI API client
    "passlib[bcrypt]>=1.7.4", # Password hashing library
    "pycld2>=0.42", # Language detection
    "pydantic>=2.0.0", # Data validation and serialization
    "pydantic[email]>=2.0.0", # Data validation with email support
    "pyjwt>=2.9.0", # JSON Web Token handling
    "python-dateutil>=2.9.0.post0", # Date and time utilities
    "python-dotenv>=1.0.1", # Environment variable management
    "python-jose[cryptography]>=3.3.0", # JOSE protocol implementation
    "pytz>=2025.2", # Timezone handling
    "pyyaml>=6.0.2", # YAML file processing
    "textstat>=0.7.10", # Text statistics analysis
    "uvicorn>=0.30.0", # ASGI server
    "zhdate>=0.1", # Chinese lunar date handling
]

[project.optional-dependencies]
dev = [
    "black>=24.8.0",                         # Code formatting tool
    "flake8>=7.0.0",                         # Code style checker
    "isort>=6.0.1",                          # Import statement sorter
    "lxml-stubs>=0.1.0",                     # Type stubs for lxml
    "mypy>=1.14.1",                          # Static type checker
    "pre-commit>=4.2.0",                     # Git pre-commit hooks
    "pytest>=8.3.5",                         # Testing framework
    "pytest-asyncio>=1.1.0",                 # Pytest async testing support
    "types-pytz>=2023.3.0",                  # pytz type annotations
    "types-python-dateutil>=2.8.2",          # python-dateutil type annotations
    "types-pyyaml>=6.0.12.20250809",         # PyYAML type annotations
    "types-requests>=2.32.4.20250611",       # Requests library type annotations
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["assistant-srv/src"]

[tool.setuptools.package-dir]
"" = "assistant-srv/src"

[tool.black]
line-length = 120
target-version = ['py312']
skip-string-normalization = false

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["assistant_srv"]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict = true
exclude = [
    "tests/.*",
    "docs/.*",
    "^build/",
]

[tool.flake8]
max-line-length = 120
exclude = [
    "tests/*",
    "docs/*",
    "build/*",
    "dist/*",
    ".venv/*",
    "__pycache__/*",
]
